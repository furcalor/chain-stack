version: '3.3'

services:

  chaininit:
    image: furcalor/partychainrpc:latest
    command:
      [
      "init",
      "--datadir=/go/.party",
      "/root/genesis.json",
      ]

  chain:
    image: furcalor/partychainrpc:latest
    ports:
      # HTTP server / GraphQL API
      - 8545:8545
      # WebSocket
      - 8546:8546
      # Network listening port (P2P networking)
      - 60301:60301
    command:
      [
      "--datadir=/go/.party",
      "--port=60301",
      "--http",
      "--http.port=8545",
      "--http.addr=0.0.0.0",
      "--http.api=debug,ssh,personal,eth,net,trace,web3,txpool,miner,admin,clique,db",
      "--http.corsdomain='*'",
      "--http.vhosts='*'",
      "--ws",
      "--ws.port=8546",
      "--ws.addr=0.0.0.0",
      "--ws.api=debug,personal,eth,net,trace,web3,txpool,miner,admin,clique,db",
      "--ws.origins='*'",
      "--graphql",
      "--graphql.corsdomain='*'",
      "--graphql.vhosts='*'",
      "--authrpc.vhosts='*'",
      "--allow-insecure-unlock",
      "--syncmode=full",
      "--nat=extip:YOURIP",
      "--gcmode=archive",

      "--bootnodes=enode://8904d18d98034bf36cc8aed2ff33fd5a59e92bcd549d5f865792ea2864170b5a88acdde54d799148071137b7ab2b9c544d82ad7354ac053fffb242e5124b3d1c@172.104.194.36:30303,enode://1918351925bd05be23486fe60fc4635f3a25abb424645f7258>
      ]

# Blockscout postgres database
  db:
    image: postgres:14
    command: -c shared_buffers=1024MB -c max_connections=200
    restart: always
    container_name: 'postgres'
    healthcheck:
      test: [ "CMD", "pg_isready  -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      timeout: 45s
      interval: 10s
      retries: 10
    environment:
        POSTGRES_PASSWORD: 'kg0jg9fdjgfd09gjfd90jgdf0'
        POSTGRES_USER: 'postgres'
        POSTGRES_HOST_AUTH_METHOD: 'trust'
    # Uncomment the following line to persist the database
    # Dont forget the volume in the bottom of the file as well
    #volumes:
    #   - postgres-data:/var/lib/postgresql/data
    ports:
      - 7432:5432

# # Redis db
  redis_db:
    image: 'redis:alpine'
    ports:
      - 6379:6379
    command: redis-server
    volumes:
      - redis-data:/data

# Blockscout blockscanner
  blockscout:
    image: tmjeff/moscout
    restart: always
    depends_on:
      - db
    links:
      - db:database
    container_name: 'blockscout'
    command: bash -c "bin/blockscout eval \"Elixir.Explorer.ReleaseTasks.create_and_migrate()\" && bin/blockscout start"
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    # env_file:
    #   -  ./envs/common-blockscout.env
    environment:
        ETHEREUM_JSONRPC_VARIANT: 'geth'
        ETHEREUM_JSONRPC_HTTP_URL: http://YOUTADDRESS:8545
        ETHEREUM_JSONRPC_TRACE_URL: http://YOUTADDRESS:8545
        ETHEREUM_JSONRPC_DISABLE_ARCHIVE_BALANCES: 'true'
        INDEXER_DISABLE_INTERNAL_TRANSACTIONS_FETCHER: 'true'
        BLOCK_TRANSFORMER: base
        BLOCKSCOUT_HOST: 0.0.0.0
        DATABASE_URL: postgresql://postgres:@db:5432/blockscout?ssl=false
        INDEXER_CATCHUP_BLOCKS_BATCH_SIZE: 250
        CHAIN_ID: '1773'
        NETWORK: PartyChain
        ECTO_USE_SSL: 'false'
        PORT: 4000
        FETCH_REWARDS_WAY: trace_block
        COIN: GRAMS
        COIN_NAME: GRAMS

    ports:
      - 4000:4000
volumes:
   redis-data:
